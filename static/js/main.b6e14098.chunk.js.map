{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","handleSubmit","e","preventDefault","employeeData","state","name","refs","value","age","act","newEmployee","push","index","console","log","setState","form","reset","handleEdit","i","handleDelete","splice","this","className","ref","type","placeholder","required","onClick","scope","map","data","require","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAuHeA,E,kDAnHb,aAAe,IAAD,8BACZ,gBAQFC,aAAe,SAACC,GACdA,EAAEC,iBACF,IAAIC,EAAe,EAAKC,MAAMD,aAC1BE,EAAO,EAAKC,KAAKD,KAAKE,MACtBC,EAAM,EAAKF,KAAKE,IAAID,MACxB,GAAuB,IAAnB,EAAKH,MAAMK,IAAW,CACxB,IAAIC,EAAc,CAChBL,KAAMA,EACNG,IAAKA,GAEPL,EAAaQ,KAAKD,OACb,CACL,IAAIE,EAAQ,EAAKR,MAAMQ,MACvBT,EAAaS,GAAOP,KAAOA,EAC3BF,EAAaS,GAAOJ,IAAMA,EAE5BK,QAAQC,IAAIX,GACZ,EAAKY,SAAS,CACZZ,aAAcA,EACdM,IAAK,IAGP,EAAKH,KAAKU,KAAKC,SA/BH,EAiCdC,WAAa,SAACC,GACZ,IAAIhB,EAAe,EAAKC,MAAMD,aAAagB,GAC3C,EAAKb,KAAKD,KAAKE,MAAQJ,EAAaE,KACpC,EAAKC,KAAKE,IAAID,MAAQJ,EAAaK,IACnCL,EAAe,EAAKC,MAAMD,aAC1BU,QAAQC,IAAIX,GACZ,EAAKY,SAAS,CACZZ,aAAcA,EACdM,IAAK,EACLG,MAAOO,KA1CG,EA6CdC,aAAe,SAACD,GACd,IAAIhB,EAAe,EAAKC,MAAMD,aAC9BA,EAAakB,OAAOF,EAAG,GAEvB,EAAKJ,SAAS,CACZZ,aAAcA,KAhDhB,EAAKC,MAAQ,CACXD,aAAc,GACdM,IAAK,EACLG,MAAO,IALG,E,0CAqDd,WAAU,IAAD,OACHT,EAAemB,KAAKlB,MAAMD,aAC9B,OACE,sBAAKoB,UAAU,YAAf,UACE,kDACA,uBAAMC,IAAI,OAAOD,UAAU,SAA3B,UACE,yCACA,uBACEE,KAAK,OACLD,IAAI,OACJD,UAAU,aACVG,YAAY,eACZC,UAAQ,IAEV,wCACA,uBACEF,KAAK,OACLD,IAAI,MACJD,UAAU,aACVG,YAAY,cACZC,UAAQ,IAEV,wBAAQC,QAAS,SAAC3B,GAAD,OAAO,EAAKD,aAAaC,IAAIsB,UAAU,YAAxD,qBAIF,wBAAOA,UAAU,QAAjB,UACE,gCACE,+BACE,oBAAIM,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,sBAGJ,gCACG1B,EAAa2B,KAAI,SAACC,EAAMZ,GAAP,OAChB,+BACE,6BAAKY,EAAK1B,OACV,6BAAK0B,EAAKvB,MACV,6BACE,wBACEe,UAAU,kBACVK,QAAS,kBAAM,EAAKV,WAAWC,IAFjC,oBAOF,6BACE,wBACEI,UAAU,iBACVK,QAAS,kBAAM,EAAKR,aAAaD,IAFnC,wBAZKA,kB,GA3FDa,EAAQ,GAAtBC,WCWOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b6e14098.chunk.js","sourcesContent":["import \"./App.css\";\nconst { Component } = require(\"react\");\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      employeeData: [],\n      act: 0,\n      index: \"\",\n    };\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    let employeeData = this.state.employeeData;\n    let name = this.refs.name.value;\n    let age = this.refs.age.value;\n    if (this.state.act === 0) {\n      let newEmployee = {\n        name: name,\n        age: age,\n      };\n      employeeData.push(newEmployee);\n    } else {\n      let index = this.state.index;\n      employeeData[index].name = name;\n      employeeData[index].age = age;\n    }\n    console.log(employeeData);\n    this.setState({\n      employeeData: employeeData,\n      act: 0,\n    });\n\n    this.refs.form.reset();\n  };\n  handleEdit = (i) => {\n    let employeeData = this.state.employeeData[i];\n    this.refs.name.value = employeeData.name;\n    this.refs.age.value = employeeData.age;\n    employeeData = this.state.employeeData;\n    console.log(employeeData);\n    this.setState({\n      employeeData: employeeData,\n      act: 1,\n      index: i,\n    });\n  };\n  handleDelete = (i) => {\n    let employeeData = this.state.employeeData;\n    employeeData.splice(i, 1);\n\n    this.setState({\n      employeeData: employeeData,\n    });\n  };\n  render() {\n    let employeeData = this.state.employeeData;\n    return (\n      <div className=\"container\">\n        <h2>Crud Application</h2>\n        <form ref=\"form\" className=\"myform\">\n          <label>Name</label>\n          <input\n            type=\"text\"\n            ref=\"name\"\n            className=\"form-field\"\n            placeholder=\"Your name...\"\n            required\n          ></input>\n          <label>Age</label>\n          <input\n            type=\"text\"\n            ref=\"age\"\n            className=\"form-field\"\n            placeholder=\"Your age...\"\n            required\n          ></input>\n          <button onClick={(e) => this.handleSubmit(e)} className=\"subButton\">\n            Save\n          </button>\n        </form>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Age</th>\n            </tr>\n          </thead>\n          <tbody>\n            {employeeData.map((data, i) => (\n              <tr key={i}>\n                <td>{data.name}</td>\n                <td>{data.age}</td>\n                <td>\n                  <button\n                    className=\"btn btn-warning\"\n                    onClick={() => this.handleEdit(i)}\n                  >\n                    Edit\n                  </button>\n                </td>\n                <td>\n                  <button\n                    className=\"btn btn-danger\"\n                    onClick={() => this.handleDelete(i)}\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}